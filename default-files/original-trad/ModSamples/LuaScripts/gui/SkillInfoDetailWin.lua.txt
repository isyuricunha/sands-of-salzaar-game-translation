require("gui/WindowUtils")
require("GameUtils")


local GameCoreHelper = CS.GameCoreHelper

--页面访问控件
local contentPane;

local btnClose;

--local imgIcon;
local txtTitle;
local txtCdInfo;
local txtCostInfo;
local lvDetailInfo;

local groupKeyInfo;
local compKeyInfo;

local spInfo;
local curCard;
local curSpSlotInfo;
local getSkillRankDelegate;
local lastIconUrl = nil;

local groupOpBtns;
local btnOpFunc1;
local btnOpFunc2;

local isMobileMode;

local onClickFuncBtnCallback = nil;

colorAddStatLine = CS.GUIHelper.GetColor("FFFFFF");
colorTitleNormal = CS.GUIHelper.GetColor("FFFFFF");
colorTitleFightCommon = CS.GUIHelper.GetColor("cdbeab");
colorTitleFightSkill = CS.GUIHelper.GetColor("bfbb55");
colorTitleFightFinal = CS.GUIHelper.GetColor("d08925");

--弹出窗体初始化时
function onCreate()
	contentPane = self.mainView;

	isMobileMode = CS.GameTools.IsMobileMode();

	spInfo = self.CustomData;

	curSpSlotInfo = self.ArgData1;
	curCard = self.ArgData2;
	getSkillRankDelegate = self.ArgData3;

	--local iconGroup = contentPane:GetChild("g_icon").asGroup;
	--imgIcon = contentPane:GetChildInGroup(iconGroup, "icon").asLoader;
	txtTitle = contentPane:GetChild("skill_name").asTextField;
	txtCdInfo = contentPane:GetChild("txt_cdinfo").asTextField;
	txtCostInfo = contentPane:GetChild("txt_costinfo").asTextField;
	lvDetailInfo = contentPane:GetChild("detail_list").asList;

	groupKeyInfo = contentPane:GetChild("g_keysinfo").asGroup;
	compKeyInfo= contentPane:GetChildInGroup(groupKeyInfo, "key_info").asCom;
	groupKeyInfo.visible = false;

	groupOpBtns = contentPane:GetChild("g_opbtns").asGroup;
	btnOpFunc1 = contentPane:GetChildInGroup(groupOpBtns, "btn_op1").asButton;
	btnOpFunc2 = contentPane:GetChildInGroup(groupOpBtns, "btn_op2").asButton;

	btnOpFunc1.onClick:Set(function()
		OnClickFuncBtn(0);
	end);
	btnOpFunc2.onClick:Set(function()
		OnClickFuncBtn(1);
	end);

	groupOpBtns.visible = false;
	btnOpFunc1.visible = false;
	btnOpFunc2.visible = false;

	--绑定按钮事件
	btnClose = contentPane:GetChild("close_btn").asButton;
	btnClose.visible = false;
	btnClose.onClick:Set(onCloseBtnClicked);

	CommonShowWindowAnim(contentPane, nil);

	UpdateSkillInfo();
end

--弹出窗体移除时
function onRemoved()

end

function HideWindow()
	CommonHideWindowAnim(contentPane, onHideAnimationDone);
end

function onHideAnimationDone()
	self:HideWindow();
end

function onCloseBtnClicked()
	PlayButtonSound();

	HideWindow();
end

function ShowSkillInfo(_sp)
	spInfo = _sp;
	UpdateSkillInfo();
end

function UpdateSkillInfo()
	if spInfo == nil then
		return;
	end

	local tagSkillInfo = spInfo.SkillInfo;
	if tagSkillInfo == nil then
		return;
	end

	local isFightSkill = false;
	local fightSkillType = 0;
	local strFightSkillTag = tagSkillInfo:GetTagValue("fight_skill_class");
	local fsCostVal = 0;
	if not IsEmptyOrNil(strFightSkillTag) then
		isFightSkill = true;
		fsCostVal = tagSkillInfo:GetTagValueInt("fs_cost");
		fightSkillType = GetFightSkillType(strFightSkillTag);
	end

	local iconUrl = tagSkillInfo.skill_icon;
	if lastIconUrl ~= iconUrl then
		--imgIcon.url = CS.GUIHelper.GetItemSkillPathByName(iconUrl);
		lastIconUrl = iconUrl;
	end
	lvDetailInfo:RemoveChildren(0, -1, true);
	local curRank = spInfo.skillLevel;
	local skillNameInfo = tagSkillInfo.skill_name;
	--if (tagSkillInfo.MaxLevel > 1) then
	--if (curRank > 0) then
	local equipAddSkillLevel = 0;
	if curCard ~= nil and curCard.cardType == 1 then
		equipAddSkillLevel = curCard.BindRole:GetEquipSkillLevel(tagSkillInfo.skill_id);
	end

	local _rankInfo = GameCoreHelper.StringFormat(GetGameString("lua_script_str_205"), curRank, tagSkillInfo.MaxLevel);
	if(equipAddSkillLevel > 0)then
		_rankInfo = _rankInfo .. " " .. GameCoreHelper.StringFormat(GetGameString("lua_script_str_205_extend"), equipAddSkillLevel);
	end
	--end
	--end
	if IsMobileMode then
		-- 手机版字号增加
		txtTitle.text = skillNameInfo .. " [size=20](" ..  _rankInfo .. ")[/size]";
	else
		txtTitle.text = skillNameInfo .. " [size=18](" ..  _rankInfo .. ")[/size]";
	end
	txtCdInfo.visible = false;
	if (tagSkillInfo.skill_type == 0) then
		if (tagSkillInfo.cd_time > 0) then
			txtCdInfo.visible = true;
			txtCdInfo.text = GameCoreHelper.StringFormat(GetGameString("lua_script_str_206"), tagSkillInfo.cd_time);
		end
		if isFightSkill and fsCostVal > 0 then
			txtCostInfo.text = GameCoreHelper.StringFormat(GetGameString("lua_script_str_207"), fsCostVal);
			txtCostInfo.visible = true;
		elseif not isFightSkill and tagSkillInfo.mp_cost > 0 then
			txtCostInfo.text = GameCoreHelper.StringFormat(GetGameString("lua_script_str_208"), tagSkillInfo.mp_cost);
			txtCostInfo.visible = true;
		else
			txtCostInfo.visible = false;
		end
	else
		txtCdInfo.text = GetGameString("skbox_passive");
		txtCdInfo.visible = true;
		txtCostInfo.visible = false;
	end

	local descInfo = CS.GameTools.GetSkillDescForCard(spInfo, curCard);
	if not IsEmptyOrNil(descInfo) then
		AddDescInfoLine(descInfo);
	end

	if not tagSkillInfo:IsIgnoreAutoDesc() and not IsEmptyOrNil(tagSkillInfo.add_status) then
		local fieldList = CS.GameTools.GetAddStatuFieldsByInfo(tagSkillInfo.add_status, curRank, curCard);
		if fieldList ~= nil and fieldList.Count > 0 then
			AddStatInfoLine(GetGameString("skbox_add_status"), colorAddStatLine);
			local tagField;
			for index=0,fieldList.Count-1 do
				tagField = fieldList[index];
				AddStatInfoLine(tagField.fieldInfo, colorAddStatLine);
			end
		end
	end

	AddBlankLine(30);

	--搏击技能处理
	if isFightSkill then
		if fightSkillType == 1 then
			txtTitle.color = colorTitleFightCommon;
		elseif fightSkillType == 2 then
			txtTitle.color = colorTitleFightFinal;
		else
			txtTitle.color = colorTitleFightSkill;
		end
		AddStatInfoLine(GetFightSkillTypeName(strFightSkillTag), txtTitle.color);
	else
		txtTitle.color = colorTitleNormal;
	end

	if spInfo.addByRoles ~= nil then
		if spInfo.addByRoles.Count > 0 then
			local roleList = "";
			local tagRole;
			for index=0,spInfo.addByRoles.Count-1 do
				tagRole = spInfo.addByRoles[index];
				if index >= 1 then
					roleList = roleList .. ", ";
				end
				roleList = roleList .. tagRole:GetRoleName();
			end
			local addByInfo = GameCoreHelper.StringFormat(GetGameString("lua_script_str_209"), roleList);
			AddRequireInfoLine(addByInfo, colorAddStatLine);
		end
	end

	groupKeyInfo.visible = false;

	if curSpSlotInfo ~= nil then
		local isPlayerRole = false;
		if curCard ~= nil and curSpSlotInfo.slotInfo.bindNode and curCard.cardType == 1 then
			if curCard.BindRole ~= nil and curCard.BindRole:IsPlayer() then
				isPlayerRole = true;
			end
			local requireInfoLines = CS.GameTools.GetSkillConditionsInfoLines(curSpSlotInfo.slotInfo.bindNode, curCard, GetCurSkillRank);
			if requireInfoLines ~= nil and requireInfoLines.Count > 0 then
				local requireInfo = GetGameString("skbox_cdt_info1");
				local tagLine;
				local lastIsWhite = false;
				for index=0,requireInfoLines.Count-1 do
					if index >= 1 then
						if lastIsWhite then
							requireInfo = requireInfo .. "[color=#cdbeab]; [/color]";
						else
							requireInfo = requireInfo .. "; ";
						end
					end
					tagLine = requireInfoLines[index];
					if tagLine.lineState >= 1 then
						requireInfo = requireInfo .. tagLine.lineInfo;
						lastIsWhite = false;
					else
						requireInfo = requireInfo .. "[color=#cdbeab]" .. tagLine.lineInfo .. "[/color]";
						lastIsWhite = true;
					end
				end
				AddRequireInfoLine(requireInfo, colorAddStatLine);
			end
		end
		local isShowUpInfo = false;
		if curSpSlotInfo.curState > 0 or curRank < tagSkillInfo.MaxLevel then
			isShowUpInfo = true;
		end
		if isShowUpInfo then
			if curSpSlotInfo.isFightSkill and curSpSlotInfo.fightSpCostNum > 0 and not IsEmptyOrNil(curSpSlotInfo.fightSpCostItem) then
				local costItemInfo = GameCoreHelper.GetItemByInfoData(curSpSlotInfo.fightSpCostItem);
				if costItemInfo ~= nil then
					local curItemNum = GameCoreHelper.GetItemStorageNum(curSpSlotInfo.fightSpCostItem);
					local requireInfo =GameCoreHelper.StringFormat(GetGameString("lua_script_str_210"),
											curItemNum, curSpSlotInfo.fightSpCostNum, costItemInfo:GetItemName());
					if curItemNum >= curSpSlotInfo.fightSpCostNum then
						requireInfo = "[color=#cdbeab]" .. requireInfo .. "[/color]";
					end
					AddRequireInfoLine(requireInfo, colorAddStatLine);
				end
			end
		end

		if isMobileMode then
			local _opRegInfo = curSpSlotInfo.opRegInfo;
			if _opRegInfo ~= nil then
				SetCurFuncBtnRegObj(_opRegInfo.opFuncBtnCmd);
				SetFuncBtn(_opRegInfo.opFuncBtn1, nil);
			end
		else
			local keyInfo = "";
			if curSpSlotInfo.curState == 2 then
				keyInfo = keyInfo .. GetSubmitKeyCode() .. "=" .. GetGameString("lua_script_str_211");
			elseif curSpSlotInfo.curState == 0 then
				if isPlayerRole and IsPageSpSlotEnableSetQuickSlot(curSpSlotInfo) then
					if CS.GameTools.IsJoystickConnected() then
						keyInfo = "BtnY=" .. GetGameString("lua_script_str_212");
					else
						keyInfo = "MLB=" .. GetGameString("lua_script_str_213");
					end
				end
				if not IsEmptyOrNil(keyInfo) then
					keyInfo = keyInfo .. "|";
				end
				if curSpSlotInfo.isEnableUpgrade then
					keyInfo = keyInfo .. GetSubmitKeyCode() .. "=" .. GetGameString("lua_script_str_214");
				end
				if not IsEmptyOrNil(keyInfo) then
					keyInfo = keyInfo .. "|";
				end
				if curSpSlotInfo.curOpCount > 0 then
					keyInfo = keyInfo .. GetRemoveKeyCode() .. "=" .. GetGameString("lua_script_str_215");
				end
			end
			if not IsEmptyOrNil(keyInfo) then
				SetKeyInfo(true, keyInfo);
			else
				SetKeyInfo(false, nil);
			end
		end
	end

	--解锁条件提示
	if (not IsEmptyOrNil(spInfo.requireInfo)) then
		AddRequireInfoLine(spInfo.requireInfo, colorAddStatLine);
	end

	lvDetailInfo:ResizeToFit();

end

function GetCurSkillRank(_skillID)
	if getSkillRankDelegate ~=  nil then
		return getSkillRankDelegate(_skillID);
	end
	if curCard ~= nil then
		if curCard.BindRole ~= nil then
			return curCard.BindRole:GetLearnedSkillLevel(_skillID);
		elseif curCard.BindSoldier then
			return curCard.BindSoldier:GetSkillLevel(_skillID);
		end
	end
	if spInfo ~= nil then
		return spInfo.skillLevel;
	end
	return 1;
end

function GetSubmitKeyCode()
	if CS.GameTools.IsJoystickConnected() then
		return "Submit";
	else
		return "MLB";
	end
end

function GetRemoveKeyCode()
	if CS.GameTools.IsJoystickConnected() then
		return "BtnX";
	else
		return "MRB";
	end
end

function SetKeyInfo(_isShow, _keyInfo)
	if _isShow then
		CS.GUIHelper.SetJoystickKeyInfo(_keyInfo, compKeyInfo);
		groupKeyInfo.visible = true;
	else
		groupKeyInfo.visible = false;
	end
end

function AddBlankLine(_height)
	local tagCom = "ItemDetailInfoBlank1"
	if IsMobileMode then
		tagCom = "ItemDetailInfoBlank1M"
	end
	local tagListObj = UIPackage.CreateObject("NewUI", tagCom).asLabel;
	lvDetailInfo:AddChild(tagListObj);
	if (tagListObj.data == nil) then
		tagItemView = {};
		tagItemView.bindLabel = tagListObj;

		tagListObj.data = tagItemView;
	else
		tagItemView = tagListObj.data;
	end
	if _height > 0 then
		tagListObj.height = _height;
	end
end

function AddStatInfoLine(_statInfo, _color)
	local tagItemView = nil;
	local tagListObj
	if IsMobileMode then
		tagListObj = UIPackage.CreateObject("NewUI", "SkillInfoDetailInfoDesc1M").asLabel;
	else
		tagListObj = UIPackage.CreateObject("NewUI", "SkillInfoDetailInfoDesc1").asLabel;
	end
	lvDetailInfo:AddChild(tagListObj);
	if (tagListObj.data == nil) then
		tagItemView = {};
		tagItemView.bindLabel = tagListObj;

		tagListObj.data = tagItemView;
	else
		tagItemView = tagListObj.data;
	end
	tagItemView.bindLabel.text = CS.GUIHelper.ConvertUGUIStr(_statInfo);
	tagItemView.bindLabel.color = _color;
end

function AddDescInfoLine(_descInfo)
	local tagItemView = nil;
	local tagListObj
	if IsMobileMode then
		tagListObj = UIPackage.CreateObject("NewUI", "SkillInfoDetailInfoDesc1M").asLabel;
	else
		tagListObj = UIPackage.CreateObject("NewUI", "SkillInfoDetailInfoDesc1").asLabel;
	end
	lvDetailInfo:AddChild(tagListObj);
	if (tagListObj.data == nil) then
		tagItemView = {};
		tagItemView.bindLabel = tagListObj;

		tagListObj.data = tagItemView;
	else
		tagItemView = tagListObj.data;
	end
	tagItemView.bindLabel.text = CS.GUIHelper.ConvertUGUIStr(_descInfo);
end

function AddRequireInfoLine(_lineInfo, _color)
	local tagItemView = nil;
	local tagListObj
	if IsMobileMode then
		tagListObj = UIPackage.CreateObject("NewUI", "SkillInfoDetailInfoRequire1M").asLabel;
	else
		tagListObj = UIPackage.CreateObject("NewUI", "SkillInfoDetailInfoRequire1").asLabel;
	end
	lvDetailInfo:AddChild(tagListObj);
	if (tagListObj.data == nil) then
		tagItemView = {};
		tagItemView.bindLabel = tagListObj;

		tagListObj.data = tagItemView;
	else
		tagItemView = tagListObj.data;
	end
	tagItemView.bindLabel.text = _lineInfo;
	--tagItemView.bindLabel.color = _color;
end

function SetCurFuncBtnRegObj(_onClickCallback)
	onClickFuncBtnCallback = _onClickCallback;
end

function SetFuncBtn(_funcBtn1, _funcBtn2)
	local _isShow = false;
	if not IsEmptyOrNil(_funcBtn1) then
		btnOpFunc1.title = _funcBtn1;
		btnOpFunc1.visible = true;

		_isShow = true;
	else
		btnOpFunc1.visible = false;
	end
	if not IsEmptyOrNil(_funcBtn2) then
		btnOpFunc2.title = _funcBtn2;
		btnOpFunc2.visible = true;

		_isShow = true;
	else
		btnOpFunc2.visible = false;
	end

	groupOpBtns.visible = _isShow;
end

function HideFuncBtns()
    groupOpBtns.visible = false;
end

function OnClickFuncBtn(_btnIndex)
	PlayButtonSound();

	if onClickFuncBtnCallback ~= nil then
		onClickFuncBtnCallback(_btnIndex);
	end
	HideFuncBtns();
	HideWindow();
end
