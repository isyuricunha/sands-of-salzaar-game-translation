require("gui/WindowUtils")
require("GameUtils")

local GameCoreHelper = CS.GameCoreHelper

--页面访问控件
local contentPane

local txtCharInfo;
local txtCampInfo;
local txtNatureInfo;
local txtBindsInfo;
local imgCurRoleHead;

local lvRvList;
local lvRcdList;

local curRole;

--窗体初始化时
function onInit()
	contentPane = self.contentPane

	txtCharInfo = contentPane:GetChild("txt_charinfo").asTextField;
	txtCampInfo = contentPane:GetChild("txt_campinfo").asTextField;
	txtNatureInfo = contentPane:GetChild("txt_natureinfo").asTextField;
	txtBindsInfo = contentPane:GetChild("txt_binds").asTextField;

	imgCurRoleHead = contentPane:GetChild("head_cliper"):GetChild("head_holder").asImage;

	lvRvList = contentPane:GetChild("role_list").asList;
	lvRcdList = contentPane:GetChild("record_list").asList;

	--绑定按钮事件
end

--设置窗口参数
function SetWindowParams(args)
	curRole = GameCoreHelper.GetRole(args[0]);
	if (curRole ~= nil) then
		UpdateRoleInfo();
	end
end

--窗体开始显示并播放显示动画时
function onDoShowAnimation()
	CommonShowWindowAnim(self, onShown)
end

--窗体播放完显示动画时
function onShown()
	
end

--窗体开始播放关闭动画时
function onDoHideAnimation()
	CommonHideWindowAnim(self, onHideAnimationDone)
end

function onHideAnimationDone()
	self:HideImmediately();
end

--窗体隐藏时
function onHide()
	
end

function UpdateRoleInfo()
	txtCharInfo.text = curRole:GetRoleName() .. " lv:" .. curRole.roleLevel;
	local campName = "-";
	if curRole:GetRoleCamp() ~= nil then
		campName = CS.GameTools.GetCampName(curRole:GetRoleCamp());
		local nobleInfo = curRole:GetNobilityRankInfo();
		if nobleInfo ~= nil then
			campName = campName .. " (" .. nobleInfo.title_name .. " " .. curRole.curMerit .. ")"
		end
	end
	txtCampInfo.text = campName;
	txtNatureInfo.text = curRole:GetRoleNaturesValInfo();

	local bindsInfo = "";
	if curRole:GetRoleCamp() ~= nil then
		bindsInfo = "领地：";
		local allFiefs = curRole:GetAllFiefList(true);
		if allFiefs ~= nil then
			local tagFief;
			for index=0,allFiefs.Count-1 do
				tagFief = allFiefs[index];
				if tagFief ~= nil then
					bindsInfo = bindsInfo .. tagFief:GetPlaceName() .. ",";
				end
			end
		end
		bindsInfo = bindsInfo .. "\n";
	end
	bindsInfo = bindsInfo .. GetRoleBindsInfo(curRole);
	txtBindsInfo.text = bindsInfo;

	CS.GUIHelper.GenerateRoleHeadAvataImage(curRole.HeadAvata, imgCurRoleHead);
	local allRoleList = GameCoreHelper.GetAllGameRoles();
	local tagRole;
	local fvVal = 0;
	lvRvList.numItems = 0;
	for index=0,allRoleList.Count-1 do
        tagRole = allRoleList[index]
        if not tagRole:IsTemplateRole() and tagRole.whereType ~= 0 then
			fvVal = tagRole:GetRelationValWithOtherRole(curRole.roleID);
			AddRoleFvListItem(tagRole, fvVal);
		end
    end

	UpdateRlEventLogs();
end

function AddRoleFvListItem(tagRole, fvVal)
	local newItemObj = lvRvList:AddItemFromPool().asCom;
	if newItemObj ~= nil then
		local compBindInfo = newItemObj.data;
		if compBindInfo == nil then
			compBindInfo = {};
			compBindInfo.txtName = newItemObj:GetChild("title").asTextField;
			compBindInfo.txtFv = newItemObj:GetChild("txt_fv").asTextField;

			compBindInfo.bindOp = newItemObj:GetChild("btn_op").asButton;
			compBindInfo.bindOp.onClick:Set(function()
				OnOpTagRole(compBindInfo);
			end);

			newItemObj.data = compBindInfo;
		end

		compBindInfo.bindRole = tagRole;
		compBindInfo.curFv = fvVal;
		compBindInfo.txtName.text = tagRole:GetRoleName();
		compBindInfo.txtFv.text = fvVal;
	end
end

function OnOpTagRole(_tagComp)
	local tagRole = _tagComp.bindRole;
	if tagRole == nil then
		return false;
	end
	CS.GUIHelper.ShowNumSelectorDialog("输入新的好感值，0为取消操作", -100, 100, _tagComp.curFv, 0, "", function (count)
		if count ~= 0 then
			GameCoreHelper.SetRoleRelationVal(curRole, tagRole, count);
			UpdateRoleInfo();
		else
			return
		end
	end)
end

function UpdateRlEventLogs()
	local allLogItems = GameCoreHelper.GetCurGameWorld():GetAllRoleRlLogs();
	local tagLogItem;
	lvRcdList.numItems = 0;
	for index=0,allLogItems.Count-1 do
        tagLogItem = allLogItems[allLogItems.Count - 1 - index]
        if tagLogItem ~= nil and tagLogItem:IsRelationRole(curRole.roleID) then
			AddEventLogListItem(tagLogItem);
		end
    end
end

function AddEventLogListItem(tagLogItem)
	local newItemObj = lvRcdList:AddItemFromPool().asCom;
	if newItemObj ~= nil then
		local compBindInfo = newItemObj.data;
		if compBindInfo == nil then
			compBindInfo = {};
			compBindInfo.txtLogInfo = newItemObj:GetChild("title").asTextField;
			newItemObj.data = compBindInfo;
		end

		compBindInfo.txtLogInfo.text = tagLogItem.logInfo;
	end
end