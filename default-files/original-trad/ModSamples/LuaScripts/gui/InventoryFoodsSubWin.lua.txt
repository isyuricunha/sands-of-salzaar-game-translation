require("gui/WindowUtils")
require("GameUtils")

local GameCoreHelper = CS.GameCoreHelper

InventoryFoodsSubWin = {
	curRole = nil,
	onCloseWindowCallback = nil,
}

InventoryFoodsSubWin.meta = {__index = InventoryFoodsSubWin}

local strItemListInfo = "";

function InventoryFoodsSubWin:Create()
	local tagClass = {}
    setmetatable(tagClass, self.meta)
    return tagClass
end

function InventoryFoodsSubWin:Init(_tagComp)
	self.mainView = _tagComp;

	self.closeBtn = _tagComp:GetChild("closeButton").asButton
	self.closeBtn.onClick:Set(function()
		self:OnClickCloseBtn();
	end);

	local itemListComp = _tagComp:GetChild("item_list").asCom
	local ctlItemsList = CS.GUIHelper.CreateItemListBox(itemListComp, GameCoreHelper.GetPlayerFoodsList(), GameCoreHelper.GetPlayerFoodsCapicity(), 2)
	ctlItemsList:SetAutoSortEnable(true)
	ctlItemsList:SetUseOpEnable(false, nil)
	ctlItemsList:SetEquipOpEnable(false)
	ctlItemsList:SetDropOpEnable(true)
	ctlItemsList:SetSortItemListCallback(function()
		self:onSortItemListCallback();
	end);
	ctlItemsList:SetParentWindow(self.mainView)
	ctlItemsList:SetDropTagSlotCallback(function(_tagSlot)
		self:onDropTagItemSlotCallback(_tagSlot);
	end);
	self.ctlItemsList = ctlItemsList;
	
	self.txtItemsInfo = _tagComp:GetChild("txt_itemsinfo").asTextField;
	strItemListInfo = GetGameString("lua_script_str01");
end

function InventoryFoodsSubWin:SetCloseCallback(_callback)
	self.onCloseWindowCallback = _callback;
end

function InventoryFoodsSubWin:OnClickCloseBtn()
	PlayButtonSound();

	if self.onCloseWindowCallback ~= nil then
		self.onCloseWindowCallback();
	end
end

function InventoryFoodsSubWin:RunUpdate(_ct)
	self.ctlItemsList:RunUpdate(_ct);
end

function InventoryFoodsSubWin:UpdateList()
	self.ctlItemsList:UpdateItemList();

	self.txtItemsInfo.text = GameCoreHelper.StringFormat(strItemListInfo, self.ctlItemsList:GetCurNum(), self.ctlItemsList:GetMaxNum());
end

function InventoryFoodsSubWin:onSortItemListCallback()
	GameCoreHelper.SortPlayerFoodsList();
	self:UpdateList();
end

--丢弃道具回调
function InventoryFoodsSubWin:onDropTagItemSlotCallback(tagSlot)
	local tagItem = tagSlot.bindItemInfo
	if tagItem == nil then
		return
	end

	local _confirmInfo = GameCoreHelper.StringFormat(GetGameString("UIPageInventory_OnConfirmDropItem"),
														 tagItem:GetItemName(), tagItem.itemCount)
	ShowConfirmDlg(_confirmInfo, "yesno", function(ret)
		if ret == 1 then
			GameCoreHelper.GetPlayerFoodsList():RemoveAt(tagSlot.bindIndex);
			self:UpdateList();
		end
	end)
end