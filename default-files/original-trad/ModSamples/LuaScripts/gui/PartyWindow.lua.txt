require("gui/WindowUtils")

--页面访问控件
local contentPane
--玩家队伍中的单位卡牌
local lvPartyList

local lvCmdBtns;
local lvHideList;
local lvDetailInfos;

local lvRoleCardList;
local lvSoldierCardList;

local btnDetail;
local btnTalk;
local btnSynth;
local btnMend;
local btnSkill;
local btnUpgrade;
local btnHandle;
local btnKickRole;

local markBtnSkill;
local markBtnUpgrade;

local timerTickInterval = 0.05

local curDlgState = 0;

local curTeam;

local GameCoreHelper = CS.GameCoreHelper;
local GameTools = CS.GameTools;

local _showRoleCount = 3;
local _showSoldierCardCount = 5;

local curSeledCardInfo = nil;
local curSeledSlot = nil;

local gameWorld = nil;
local playerRole = nil;
local playerTeam = nil;

local isInEvent = false;
local popupMask = nil;

--窗体初始化时
function onInit()
	contentPane = self.contentPane

	gameWorld = GameCoreHelper.GetCurGameWorld();
	playerRole = GameCoreHelper.GetPlayerRole();
	playerTeam = GameCoreHelper.GetPlayerTeam();

	local leftListGroup = contentPane:GetChild("left_box").asGroup

	lvPartyList = contentPane:GetChildInGroup(leftListGroup, "tag_list1").asList
	local compRoleCards = lvPartyList:GetChildAt(1).asCom;
	lvRoleCardList = compRoleCards:GetChild("list").asList
	local compSoldierCards = lvPartyList:GetChildAt(3).asCom;
	lvSoldierCardList = compSoldierCards:GetChild("list").asList

	popupMask = contentPane:GetChild("mask").asGraph;
	popupMask.visible = false;

	--绑定按钮事件
	lvCmdBtns = contentPane:GetChild("list_btns").asList;
	lvHideList = contentPane:GetChild("list_hide").asList;
	lvHideList.visible = false;

	lvDetailInfos = contentPane:GetChild("team_info").asList;

	btnDetail = lvCmdBtns:GetChildAt(0).asButton;
	btnDetail.onClick:Add(onClickBtnDetail);
	btnTalk = lvCmdBtns:GetChildAt(1).asButton;
	btnTalk.onClick:Add(onClickBtnTalk);
	btnSynth = lvCmdBtns:GetChildAt(2).asButton;
	btnSynth.onClick:Add(onClickBtnSynth);
	btnMend = lvCmdBtns:GetChildAt(3).asButton;
	btnMend.onClick:Add(onClickBtnMend);
	btnSkill = lvCmdBtns:GetChildAt(4).asButton;
	btnSkill.onClick:Add(onClickBtnSkill);
	markBtnSkill = AddAlertMarkToBtn(btnSkill);
	btnUpgrade = lvCmdBtns:GetChildAt(5).asButton;
	btnUpgrade.onClick:Add(onClickBtnUpgrade);
	markBtnUpgrade = AddAlertMarkToBtn(btnUpgrade);
	btnHandle = lvCmdBtns:GetChildAt(6).asButton;
	btnHandle.onClick:Add(onClickBtnHandle);
	btnKickRole = lvCmdBtns:GetChildAt(7).asButton;
	btnKickRole.onClick:Add(onClickBtnKickRole);

	curDlgState = 0;
	curTeam = GameCoreHelper.GetPlayerTeam();
	--初始事件
	RefreshPartyMembers();

	SelectTagCard(nil);
end

--窗体开始显示并播放显示动画时
function onDoShowAnimation()
	CommonShowWindowAnim(self, onShown)
end

--窗体播放完显示动画时
function onShown()
	--增加计时器事件
	CS.FairyGUI.Timers.inst:Add(timerTickInterval, 0, onTimerTickUpdate);

	curDlgState = 1;
end

--窗体开始播放关闭动画时
function onDoHideAnimation()
	curDlgState = -1;
	CommonHideWindowAnim(self, onHideAnimationDone)
end

function onHideAnimationDone()
	self:HideImmediately();
end

--窗体隐藏时
function onHide()
	curDlgState = -1;
	--移除计时器事件
	CS.FairyGUI.Timers.inst:Remove(onTimerTickUpdate);

	--关闭所有弹出框
	CS.GUIHelper.CloseAllPopupWindow();
end

function onTimerTickUpdate()
	if curDlgState ~= 1 then
		return;
	end
	if curTeam ~= nil and curTeam.isTeamUpdated then
		UpdateTeamInfos();
		curTeam.isTeamUpdated = false;
	end

	if not IsBlockMaskShow() and gameWorld:IsEventQueueBusying() then
		isInEvent = true;
		SetBlockMask(true);
	elseif isInEvent and not gameWorld:IsEventQueueBusying() then
		SetBlockMask(false);
		isInEvent = false;
	end
end

--UI逻辑
function UpdateTeamInfos()
	RefreshPartyMembers();

end

function RefreshPartyMembers()
	SetCurSeledCardSlot(nil);

	--渲染英雄卡
	_showRoleCount = CS.CardLogic.GetRolesCapacity(curTeam);
	local lockLast = false;
	if _showRoleCount < CS.CardLogic.GetRoleMaxCount(curTeam) then
		_showRoleCount = _showRoleCount + 1;
		lockLast = true;
	end
	lvRoleCardList.numItems = _showRoleCount;

	local defSelCardSlot = nil;

	--遍历角色表
	local tagRoleCard;
	local curRoleList = curTeam.rolesInTeam;
	local tagSlotInfo;
	local _lockInfo = "";
	local _isLockTagSlot = false;
	for index=0,lvRoleCardList.numItems-1 do
		tagSlotInfo = GetTagCardSlotBindInfo(lvRoleCardList:GetChildAt(index).asCom);
		if lockLast and index >= lvRoleCardList.numItems-1 then
			--显示解锁界面
			_isLockTagSlot = false;
			_lockInfo = "";
			if CS.CardLogic.IsTagRoleSlotLocked(curTeam, index) then
				_lockInfo = CS.CardLogic.GetTagRoleSlotUnlockInfo(curTeam);
				_isLockTagSlot = true;
			end
			UpdateCardSlotView(tagSlotInfo, nil, index, 0, _isLockTagSlot, _lockInfo);
		else
			tagRoleCard = nil
			if index < curRoleList.Count then
				tagRoleCard = curRoleList[index].BindCard;
			end
			UpdateCardSlotView(tagSlotInfo, tagRoleCard, index, 0, false, "");
			if tagRoleCard ~= nil and curSeledCardInfo == tagRoleCard then
				defSelCardSlot = tagSlotInfo;
			end
		end
    end

	--渲染兵卡
	_showSoldierCardCount = CS.CardLogic.GetSoldierCardsCapacity(curTeam);
	lockLast = false;
	if _showSoldierCardCount < CS.CardLogic.GetSoldierCardMaxCount(curTeam) then
		_showSoldierCardCount = _showSoldierCardCount + 1;
		lockLast = true;
	end
	lvSoldierCardList.numItems = _showSoldierCardCount;

	--遍历小兵表
	local tagSoldierCard;
	local curSoldierList = curTeam.soldierCardsInTeam;
	for index=0,lvSoldierCardList.numItems-1 do
		tagSlotInfo = GetTagCardSlotBindInfo(lvSoldierCardList:GetChildAt(index).asCom);
		if lockLast and index >= lvSoldierCardList.numItems-1 then
			--显示解锁界面
			_isLockTagSlot = false;
			_lockInfo = "";
			if CS.CardLogic.IsTagSoldierCardSlotLocked(curTeam, index) then
				_lockInfo = CS.CardLogic.GetTagSoldierCardSlotUnlockInfo(curTeam);
				_isLockTagSlot = true;
			end
			UpdateCardSlotView(tagSlotInfo, nil, index, 0, _isLockTagSlot, _lockInfo);
		else
			tagSoldierCard = nil
			if index < curSoldierList.Count then
				tagSoldierCard = curSoldierList[index];
			end
			UpdateCardSlotView(tagSlotInfo, tagSoldierCard, index, 1, false, "");
			if tagSoldierCard ~= nil and curSeledCardInfo == tagSoldierCard then
				defSelCardSlot = tagSlotInfo;
			end
		end
    end

	lvRoleCardList:ResizeToFit();
	lvSoldierCardList:ResizeToFit();

	--更新队伍信息
	RefreshTeamInfoDetails();

	SelectTagCard(defSelCardSlot);

	curTeam.isTeamUpdated = false;
end

function GetTagCardSlotBindInfo(_tagSlotObj)
	local compBindInfo = _tagSlotObj.data;
	if compBindInfo == nil then
		--初始化控件绑定信息
		compBindInfo = {};
		compBindInfo.cardInfo = nil;
		compBindInfo.bindBtn = _tagSlotObj:GetChild("card_ui").asButton;
		compBindInfo.cardSlot = InitBindListUnitCardCommon(compBindInfo.bindBtn, true);
		compBindInfo.imgAlertMark = _tagSlotObj:GetChild("alert_mark").asImage;
		compBindInfo.imgQuestMark = _tagSlotObj:GetChild("quest_marker").asImage;
		compBindInfo.groupUnlock = _tagSlotObj:GetChild("lock_group").asGroup;
		compBindInfo.txtUnlockInfo = _tagSlotObj:GetChildInGroup(compBindInfo.groupUnlock, "unlock_info").asTextField;
		compBindInfo.bindBtn.onClick:Set(function()
			OnClickTagCardSlot(compBindInfo);
		end);

		_tagSlotObj.data = compBindInfo;
	end
	return compBindInfo;
end

function UpdateCardSlotView(_tagSlot, _cardInfo, _index, _tag, _isLocked, _lockInfo)
	if _tagSlot ~= nil then
		_tagSlot.slotIndex = _index;
		_tagSlot.slotTag = _tag;
		_tagSlot.cardInfo = _cardInfo;
		_tagSlot.imgAlertMark.visible = false;
		_tagSlot.imgQuestMark.visible = false;
		UpdateListUnitCardCommon(_tagSlot.bindBtn, _cardInfo, _index, _tag);
		if _isLocked then
			_tagSlot.groupUnlock.visible = true;
			_tagSlot.txtUnlockInfo.text = _lockInfo;
		else
			_tagSlot.groupUnlock.visible = false;

			if _cardInfo ~= nil then
				local cardType = _cardInfo:GetCardType();
				if cardType == 0 then
					--小兵
					if CS.CardLogic.CouldUpgrade(_cardInfo) then
						_tagSlot.imgAlertMark.visible = true;
					end
				elseif cardType == 1 then
					--英雄
					local tagRole = _cardInfo.BindRole;
					if tagRole:HasUnlockDistributeSp() then
						_tagSlot.imgAlertMark.visible = true;
					end
					--检查任务标记
					if not tagRole:IsPlayer() then
						if tagRole:HasQuestBinded() then
							_tagSlot.imgQuestMark.visible = true;
						end
					end
				end
			end
		end
	end
end

function onClickBtnDetail()
	PlayButtonSound()

	if curSeledCardInfo ~= nil then
		SetBlockMask(true);
		ShowCardDetailInfoAtCenter(curSeledCardInfo, function(ret)
			SetBlockMask(false);
			RefreshPartyMembers();
		end);
	end
end

function onClickBtnTalk()
	PlayButtonSound()

	if curSeledCardInfo ~= nil then
		local tagRole = curSeledCardInfo.BindRole;
		if tagRole ~= nil then
			TalkToTagRole(tagRole);
		end
	end
end

function TalkToTagRole(role)
	if not playerTeam:ContainsRole(role) then
		GameTools.DebugLogError("内部错误:对话的角色不在队伍。");
		return false;
	end

	local curRtVals = GameCoreHelper.CreateEmptyRuntimeArgVal();
	curRtVals.CurTagRoleID = role.roleID;
	if role ~= nil and not role:IsTemplateRole() then
		role:SetPlayerContactActive();
	end

	local tagTrigger = gameWorld:GetBindTrigger("talk", "TEAMHERO", role.roleID, curRtVals);
	if tagTrigger ~= nil then
		if gameWorld:CheckTrigger(tagTrigger.Key, curRtVals) then
			return true;
		end
	end

	local defTalks = role:getRoleTemplate():getDefTalks();
	if not IsEmptyOrNil(defTalks) then
		SetBlockMask(true);
		CS.GUIHelper.ShowRoleTalkDialog(role.roleID, defTalks, function(ret)
			SetBlockMask(false);
		end);
		return true;
	end

	return false;
end

function onClickBtnSynth()
	PlayButtonSound()

	if curSeledCardInfo ~= nil and curSeledCardInfo:IsSyntheEnable() then
		SetBlockMask(true);
		CS.GUIHelper.ShowCardSynthUI(curSeledCardInfo, nil, nil, function(ret)
			RefreshPartyMembers();
			SetBlockMask(false);
		end);
	end
end

function onClickBtnMend()
	PlayButtonSound()

	if not CS.GameConfig.noCardAutoSupply and curSeledCardInfo:IsMendable() then
		SetBlockMask(true);
		CS.GUIHelper.ShowCardRepairUI(curSeledCardInfo, function(ret)
			RefreshPartyMembers();
			SetBlockMask(false);
		end);
	end

end

function onClickBtnSkill()
	PlayButtonSound()

	if curSeledCardInfo ~= nil then
		local tagRole = curSeledCardInfo.BindRole;
		--SetBlockMask(true);
		CS.GUIHelper.ShowSkillDistribUI(tagRole, "", function(ret)
			--SetBlockMask(false);
		end);
	end
end

function onClickBtnUpgrade()
	PlayButtonSound()

	if curSeledCardInfo ~= nil and curSeledCardInfo:IsUpgradeInfoValid() then
		SetBlockMask(true);
		CS.GUIHelper.ShowCardUpgradeUI(curSeledCardInfo, function(ret)
			RefreshPartyMembers();
			SetBlockMask(false);
		end);
	end
end

function onClickBtnHandle()
	PlayButtonSound();

	if curSeledCardInfo:IsDisposeEnable() then
		SetBlockMask(true);
		CS.GUIHelper.ShowCardDisposeUI(curSeledCardInfo, function(ret)
			RefreshPartyMembers();
			SetBlockMask(false);
		end);
	end
end

function onClickBtnKickRole()
	PlayButtonSound();

	if curSeledCardInfo.BindRole ~= nil and curSeledCardInfo.BindRole:IsLeaveTeamEnable() then
		ShowConfirmDlg(GetGameString("LUAUnitCardsStorageBoxAlertInfo1"), "yesno", function(ret)
			if ret == 1 then
				RefreshPartyMembers();
				--生成一份离队角色，跑到最近的城市去
				CS.WorldAIHelper.WorldAI_RoleLeaveAndGotoRandomCity(curSeledCardInfo.BindRole);
				self:Hide();
			end
		end)
	end
end

function UpdateBtnsView()
	SetCmdBtnVisible(btnDetail, false);
	SetCmdBtnVisible(btnTalk, false);
	SetCmdBtnVisible(btnSynth, false);
	SetCmdBtnVisible(btnMend, false);
	SetCmdBtnVisible(btnSkill, false);
	SetCmdBtnVisible(btnUpgrade, false);
	SetCmdBtnVisible(btnHandle, false);
	SetCmdBtnVisible(btnKickRole, false);

	if curSeledCardInfo ~= nil then
		SetCmdBtnVisible(btnDetail, true);

		local cardType = curSeledCardInfo:GetCardType();
		--角色牌并且不是主角
		if cardType == 1 and curSeledCardInfo.BindRole ~= nil and curSeledCardInfo.BindRole ~= playerRole then
            SetCmdBtnVisible(btnTalk, true);
        end

		if curSeledCardInfo:IsSyntheEnable() then
			SetCmdBtnVisible(btnSynth, true);
		end

		if not CS.GameConfig.noCardAutoSupply and curSeledCardInfo:IsMendable() then
			SetCmdBtnVisible(btnMend, true);
		end

		if CS.GameConfig.enableCardUpgrade and cardType == 0 and curSeledCardInfo:IsUpgradeInfoValid() and curSeledCardInfo.CurAvailable > 0 then
			SetCmdBtnVisible(btnUpgrade, true);
			if CS.CardLogic.CouldUpgrade(curSeledCardInfo) then
				markBtnUpgrade.visible = true;
			else
				markBtnUpgrade.visible = false;
			end
        end

		if curSeledCardInfo:IsDisposeEnable() then
			SetCmdBtnVisible(btnHandle, true);
		end

		if cardType == 1 and curSeledCardInfo.BindRole ~= nil then
            SetCmdBtnVisible(btnSkill, true);
			if curSeledCardInfo.BindRole:HasUnlockDistributeSp() then
				markBtnSkill.visible = true;
			else
				markBtnSkill.visible = false;
			end
			if curSeledCardInfo.BindRole:IsLeaveTeamEnable() then
				SetCmdBtnVisible(btnKickRole, true);
			end
        end

	end


end

function SetCmdBtnVisible(_tagBtn, _isShow)
	if _tagBtn ~= nil then
		if _isShow then
			lvHideList:RemoveChild(_tagBtn);
			lvCmdBtns:AddChild(_tagBtn);
		else
			lvCmdBtns:RemoveChild(_tagBtn);
			lvHideList:AddChild(_tagBtn);
		end
	end
end

function OnClickTagCardSlot(_tagSlot)
	PlayButtonSound();
	if _tagSlot.cardInfo ~= nil then
		SelectTagCard(_tagSlot);
	end
end

function SelectTagCard(_tagSlot)
	SetCurSeledCardSlot(_tagSlot);
	if _tagSlot ~= nil then
		curSeledCardInfo = _tagSlot.cardInfo;
	end
	UpdateBtnsView();
end

function SetCurSeledCardSlot(_tagSlot)
	if curSeledSlot ~= nil then
		SetUnitCardSlotSelected(curSeledSlot.cardSlot, false);
	end
	curSeledSlot = _tagSlot;
	if curSeledSlot ~= nil then
		SetUnitCardSlotSelected(curSeledSlot.cardSlot, true);
	end
end

function SetBlockMask(_isShow)
	popupMask.visible = _isShow;
end

function IsBlockMaskShow()
	return popupMask.visible;
end

function AddAlertMarkToBtn(_tagBtn)
	return CS.GUIHelper.CreateAlertMark(_tagBtn, 5, CS.UnityEngine.Vector2(-24, 0));
end

function RefreshTeamInfoDetails()
	lvDetailInfos.numItems = 0;

	AddTeamInfoText(curTeam:GetTeamNameInfo(), 0);
	local teamCamp = curTeam.leaderRole:GetRoleCamp();
	if teamCamp ~= nil then
		local campInfo = GetGameString("UINewPartyPage_UpdateTeamInfos") .. CS.GameTools.GetCampName(teamCamp);
		AddTeamInfoText(campInfo, 0);
	end
	--刷新角色数量
	AddTeamInfoText(GameCoreHelper.StringFormat(GetGameString("UINewPartyPage_UpdateTeamInfos_1"), curTeam:GetCurRoleCount(), CS.CardLogic.GetRolesCapacity(curTeam)));
	--刷新兵牌数量
	AddTeamInfoText(GameCoreHelper.StringFormat(GetGameString("UINewPartyPage_UpdateTeamInfos_2"), curTeam:GetCurSoldierCount(), CS.CardLogic.GetSoldierCardsCapacity(curTeam)));

	--更新队伍基础信息
	AddTeamInfoText(GameCoreHelper.StringFormat(GetGameString("UINewPartyPage_UpdateTeamInfos_3"), curTeam.curSpeedOnMap));
	AddTeamInfoText(GameCoreHelper.StringFormat(GetGameString("UINewPartyPage_UpdateTeamInfos_4"), curTeam:GetCurRoleCount()));
	AddTeamInfoText(GameCoreHelper.StringFormat(GetGameString("UINewPartyPage_UpdateTeamInfos_5"), curTeam:GetCurSoldierCount()));
	AddTeamInfoText(GameCoreHelper.StringFormat(GetGameString("UINewPartyPage_UpdateTeamInfos_6"), curTeam:GetBattleUnitsNum()));

end

function AddTeamInfoText(_txtInfo, _infoT)
	local newLabel = lvDetailInfos:AddItemFromPool().asLabel;
	if newLabel ~= nil then
		newLabel.title = CS.GUIHelper.ConvertUGUIStr(_txtInfo);
	end
end