require("gui/WindowUtils")

local GameCoreHelper = CS.GameCoreHelper

--页面访问控件
local contentPane

local btnBack

local ctlPartSelList
local genderCtl
local btnGenderMale
local btnGenderFemale

local sliderParamsList

local inputName
local btnRndName
local graphAvataHolder
local btnRndAvata
local curAvata

local imgModelHolder
local btnModelLeft
local btnModelRight

local btnConfirm

local isEnableSelGender = true
local isFixedPlayerName = false

local curSeledModelIndex = -1
local defModelListMale
local defModelListFemale
local curModelList
local defPlayerModel
local curModelCtl
local curModelDir = 0
local curSeledModelID = nil

--窗体初始化时
function onInit()
	contentPane = self.contentPane

	local initAvataInfo = CS.GUIHelper.GetGUIGlobalStrVal("def_avata_info")

	btnBack = contentPane:GetChild("btn_back").asButton
	btnConfirm = contentPane:GetChild("btn_confirm").asButton

	sliderParamsList = contentPane:GetChild("param_list").asList

	btnGenderMale = contentPane:GetChild("btn_male").asButton
	btnGenderFemale = contentPane:GetChild("btn_female").asButton
	ctlPartSelList = CS.GUICtlLegacyAvataPartsSelector.CreateComponent(contentPane:GetChild("part").asCom, sliderParamsList)
	genderCtl = contentPane:GetController("ctl_gender")
	ctlPartSelList:SetListItemImageSize(256, 256)

	inputName = contentPane:GetChild("txt_input_val").asTextInput
	btnRndName = contentPane:GetChild("btn_rndname").asButton
	graphAvataHolder = contentPane:GetChild("avata_holder").asGraph
	btnRndAvata = contentPane:GetChild("btn_random").asButton
	curAvata = CS.GUIHelper.CreateHeadAvataView(initAvataInfo, graphAvataHolder, true)
	curAvata.gameObject:SetActive(true)

	local modelSelComp = contentPane:GetChild("model_sel").asCom
	imgModelHolder = modelSelComp:GetChild("model_holder").asImage
	btnModelLeft = modelSelComp:GetChild("btn_left").asButton
	btnModelRight = modelSelComp:GetChild("btn_right").asButton

	local defAvataGender = 0
	local isFemale = false
	if CS.GUIHelper.GetGUIGlobalIntVal("def_avata_gender") == 1 then
		defAvataGender = 1
		isFemale = true
	end
	curAvata:SetAvataGender(isFemale, false)
	genderCtl.selectedIndex = defAvataGender
	local isLimitGenderVal = CS.GUIHelper.GetGUIGlobalIntVal("gender_limit_mode")
	if isLimitGenderVal == 0 then
		genderCtl.selectedIndex = 0
		isEnableSelGender = false
	elseif isLimitGenderVal == 1 then
		genderCtl.selectedIndex = 1
		isEnableSelGender = false
	else
		isEnableSelGender = true
	end
	updateGenderBtnVisible()

	ctlPartSelList:SetAvataUI(curAvata)

	if CS.GUIHelper.GetGUIGlobalIntVal("is_fixed_name") == 1 then
		inputName.text = CS.GUIHelper.GetGUIGlobalStrVal("def_player_name")
		inputName.enabled = false
		isFixedPlayerName = true
	else
		GenRandomName()
		inputName.enabled = true
		isFixedPlayerName = false
	end
	updateRndNameBtn()

	defPlayerModel = CS.GUIHelper.GetGUIGlobalStrVal("def_player_model")

	defModelListMale = CS.GUIHelper.GetAllEnabledPlayerModels(false)
	defModelListFemale = CS.GUIHelper.GetAllEnabledPlayerModels(true)

	--绑定按钮事件
	btnBack.onClick:Add(onClickBackBtn);
	btnConfirm.onClick:Add(onClickConfirmBtn);

	btnGenderMale.onClick:Add(onClickGenderMaleBtn);
	btnGenderFemale.onClick:Add(onClickGenderFemaleBtn);

	btnRndAvata.onClick:Add(onClickRndAvataBtn);
	btnRndName.onClick:Add(onClickRndNameBtn);
	btnModelLeft.onClick:Add(onClickModelLeftBtn);
	btnModelRight.onClick:Add(onClickModelRightBtn);

	CS.GUIHelper.SetSwipeGestureCallback(modelSelComp, nil, function(deltaMove)
		if math.abs(deltaMove.x) < 2 then
			--消除手抖影响
			return
		end
		SetModelDir(GetModelDir() - deltaMove.x)
	end, nil)

	--设置默认值
	self:SetCloseButton(btnBack)

	initPageList()
	updateModelList()
end

--窗体开始显示并播放显示动画时
function onDoShowAnimation()
	CommonShowWindowAnim(self, onShown)
end

--窗体播放完显示动画时
function onShown()
	
end

--窗体开始播放关闭动画时
function onDoHideAnimation()
	curAvata.gameObject:SetActive(false)
	CommonHideWindowAnim(self, onHideAnimationDone)
end

function onHideAnimationDone()
	self:HideImmediately();
end

--窗体隐藏时
function onHide()
	
end

--按下后退按钮时
function onClickBackBtn()
	PlayButtonSound()
	
	beforeLeaveScene()
	self.CurDialogResult = 0
	self:Hide()
end

function ShowAlertInfo(_msg, type)
	local toastInfo = "";
	if type == 1 then
		toastInfo = toastInfo .. "[[red:"
	else
		toastInfo = toastInfo .. "[[white:"
	end
	toastInfo = toastInfo .. _msg .. "]]";
	ShowToastInfo(toastInfo, 2);
end

function onClickConfirmBtn()
	PlayButtonSound()

	local _inputName = inputName.text
	if _inputName == nil or #_inputName < 2 then
		ShowAlertInfo(GetGameString("CreateRolePanel_NameTooShortAlert1"), 1)
    	return
	end

	if not CS.GameUtils.VerifyPlayerInputInfo(_inputName) then
		ShowAlertInfo(GetGameString("CreateRolePanel_StartCreateRole"), 1);
		inputName.text = CS.GameUtils.FixPlayerInputStr(_inputName)
		return
	end

	local word
	if CS.GameTools.GetSensitiveWord(_inputName) then
		ShowAlertInfo(GameCoreHelper.StringFormat(GetGameString("CreateRolePanel_StartCreateRole_1"), word), 1);
		return
	end

	if not CS.GameTools.IsNameValid(_inputName) then
		ShowAlertInfo(GetGameString("CreateRolePanel_StartCreateRole_2"), 1);
		return
	end

	local avataInfo = curAvata.curShowingData
	local genderVal = 0
	if curAvata.headGender then
		genderVal = 1
	end

	CS.GUIHelper.SetGUIGlobalStrVal("edit_avata_info", avataInfo)
	CS.GUIHelper.SetGUIGlobalIntVal("edit_avata_gender", genderVal)
	CS.GUIHelper.SetGUIGlobalStrVal("edit_player_name", _inputName)
	CS.GUIHelper.SetGUIGlobalStrVal("edit_model_info", curSeledModelID)
	
	beforeLeaveScene()

	self.CurDialogResult = 1
	self:InvokeExtCallback(1)
end

function beforeLeaveScene()
	CS.GUIHelper.CloseAllPopupWindow()
end

function updateGenderBtnVisible()
	if isEnableSelGender and curAvata.curShowingType == 1 then
		btnGenderMale.visible = true
		btnGenderFemale.visible = true
	else
		btnGenderMale.visible = false
		btnGenderFemale.visible = false
	end
end

function onClickGenderMaleBtn()
	PlayButtonSound()

	changeGender(false)
end

function onClickGenderFemaleBtn()
	PlayButtonSound()

	changeGender(true)
end

function changeGender(_isFemale)
	curAvata:SetAvataGender(_isFemale, true)
	UpdateSetsByAvata()
	if curSeledModelIndex < 0 then
		curSeledModelIndex = 0
	end
	updateModelList()
end


function onClickRndAvataBtn()
	PlayButtonSound()

	if curAvata.curShowingType ~= 1 then
		ShowConfirmDlg(GetGameString("HeadAvataPanelUI_Random"), "yesno", function(ret)
			if ret == 0 then
				doGenRandomAvata(true)
			end
		end)
	else
		doGenRandomAvata(false)
	end
end

function doGenRandomAvata(_forceUpdate)
	curAvata:Random()
	ctlPartSelList:RefreshPartsList(_forceUpdate)
	updateGenderBtnVisible()
end

function UpdateSetsByAvata()
	ctlPartSelList:RefreshPartsList(true)
end

function onClickRndNameBtn()
	PlayButtonSound()

	GenRandomName()
end

function updateRndNameBtn()
	if not isFixedPlayerName and CS.GameTools.IsChineseLanguage() then
		btnRndName.visible = true
	else
		btnRndName.visible = false
	end
end

function GenRandomName()
	if not isFixedPlayerName and CS.GameTools.IsChineseLanguage() then
		inputName.text = CS.GameTools.GetRandomPlayerName(curAvata.headGender)
	end
end

function onClickModelLeftBtn()
	PlayButtonSound()

	switchModelIndex(curSeledModelIndex - 1)
end

function onClickModelRightBtn()
	PlayButtonSound()

	switchModelIndex(curSeledModelIndex + 1)
end

function switchModelIndex(nextPage)
	curSeledModelIndex = nextPage;
	if curSeledModelIndex < 0 then
		curSeledModelIndex = curModelList.Count - 1
	elseif curSeledModelIndex >= curModelList.Count then
		curSeledModelIndex = 0
	end
	updateModelList()
end

function initPageList()
	
end

function updateModelList()
	local curModelInfo
	if curAvata.headGender then
		curModelList = defModelListFemale
	else
		curModelList = defModelListMale
	end
	if curSeledModelIndex < 0 and not IsEmptyOrNil(defPlayerModel) then
		curModelInfo = defPlayerModel
	elseif curModelList.Count > 0 then
		if curSeledModelIndex < 0 then
			curSeledModelIndex = curModelList.Count - 1
		elseif curSeledModelIndex >= curModelList.Count then
			curSeledModelIndex = 0
		end
		curModelInfo = curModelList[curSeledModelIndex]
	end
	if not IsEmptyOrNil(curModelInfo) then
		curSeledModelID = curModelInfo
		curModelInfo = "3D#" .. curModelInfo .. "#男空手1#r_weapon:null;l_weapon:null"
		curModelCtl = CS.GUIHelper.CreateModelViewToTagGraphHolder(curModelInfo, imgModelHolder, true)
	end
end

function GetModelDir()
	return curModelDir
end

function SetModelDir(_tagDir)
	curModelDir = _tagDir
	UpdateModelDir()
end

function UpdateModelDir()
	if curModelCtl ~= nil then
		curModelCtl:SetModelDir(curModelDir)
	end
end