require("gui/WindowUtils")

local btnStartGame
local btnLoadGame
local btnMultiGame
local btnGameSetting

local groupPolicy
local btnCheckIsAccept
local btnPolicy1;
local btnPolicy2;

local homeSceneController

--窗体初始化时
function initPanel(_tagComp, _controllerUI)
	contentPane = _tagComp
	homeSceneController = _controllerUI

	--绑定按钮事件
	local tagBtnList = contentPane:GetChild("btn_list").asList

	btnStartGame = tagBtnList:GetChildAt(0).asButton;
	btnStartGame.onClick:Add(onClickStartGame);

	btnLoadGame = tagBtnList:GetChildAt(1).asButton;
	btnLoadGame.onClick:Add(onClickLoadGame);

	btnMultiGame = tagBtnList:GetChildAt(2).asButton;
	btnMultiGame.onClick:Add(onClickMultiGame);

	btnGameSetting = tagBtnList:GetChildAt(3).asButton;
	btnGameSetting.onClick:Add(onClickGameSetting);

	groupPolicy = contentPane:GetChild("info_box1").asGroup;
	local policyComp = contentPane:GetChildInGroup(groupPolicy, "proto_info").asCom;
	btnCheckIsAccept = policyComp:GetChild("check_box").asButton;
	btnPolicy1 = policyComp:GetChild("btn_proto1").asButton;
	btnPolicy2 = policyComp:GetChild("btn_proto2").asButton;

	btnCheckIsAccept.onClick:Add(onClickAcceptPolicy);
	btnPolicy1.onClick:Add(onClickShowXDPolicy1);
	btnPolicy2.onClick:Add(onClickShowXDPolicy2);

	btnCheckIsAccept.selected = CS.GameCoreHelper.GetGlobalInt("accepted_mobile_policy") == 1
end

--当内置弹出UI关闭时
function onUIClosed()
	contentPane.touchable = true
end

--当窗体销毁时
function onDestroyed()
	
end

function onUIShowed()
	contentPane.touchable = false
end

function onClickStartGame()
	PlayButtonSound()

	if not CheckIsAccept() then
		return
	end

	CS.GUIHelper.ShowGUIWindow(constPackageName, "MGameModeSelWindow", "mobile/SelectGameModeWin", "", onSelectGameWinCallback, true)
end

function onSelectGameWinCallback(ret)
	if ret == 1 then
		
	end
end

function onClickLoadGame()
	if not CheckIsAccept() then
		return
	end

	onUIShowed()
	homeSceneController:LoadGame()
end

function onClickGameSetting()
	local settingsDlg = CS.GUIHelper.ShowGUIWindow(constPackageName, "MGameSettingsWindow", "mobile/GameSettingsWin", "", onSettingsWinCallback, true)
	settingsDlg.CustomData.changeLanguageCallback = onSetGameLanguage;
end

function onSetGameLanguage(_newLanguage)
	homeSceneController:ChangeLanguage(_newLanguage)
end

function onSettingsWinCallback(ret)
	
end

function onClickMultiGame()
	if not CheckIsAccept() then
		return
	end

	homeSceneController:ShowMGameUI(false)
end

function onClickAcceptPolicy()
	local acceptVal = 0
	if btnCheckIsAccept.selected then
		acceptVal = 1
	end
	CS.GameCoreHelper.SetGlobalInt("accepted_mobile_policy", acceptVal, true)
end

function onClickShowXDPolicy1()
	openPolicyUrl("", btnPolicy1.text)
end

function onClickShowXDPolicy2()
	openPolicyUrl("", btnPolicy2.text)
end

function openPolicyUrl(url, _title)
	CS.GUIHelper.ShowGameNoticeInfoByUrl(url, _title)
end

function CheckIsAccept()
	if not btnCheckIsAccept.selected then
		AlertErrorMsg(GetGameString("lua_script_str47"))
		return false
	end
	return true
end

function AlertErrorMsg(errInfo)
	ShowToastInfo(errInfo, 3)
end